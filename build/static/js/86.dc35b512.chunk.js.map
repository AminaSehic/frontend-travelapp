{"version":3,"file":"static/js/86.dc35b512.chunk.js","mappings":"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","sources":["components/Button.js","components/Modal.js","components/NavBar.js","hooks/useLogout.js","components/ValidationError.js","pages/EditProfile.js","hooks/useUpdateUser.js","components/Client.js","hooks/useRemoveUser.js","pages/ListAllClients.js","hooks/useAllUsers.js"],"sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\n\n// Spinner Animation\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\n// Styled Spinner\nexport const ButtonSpinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-top: 4px solid black;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\nconst Button = styled.button`\n  border: 1px solid;\n  border-radius: ${(props) =>\n    props.borderRadius ? props.borderRadius : \"15px\"};\n  font-size: 1.1rem;\n  padding: 5px 15px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n  }\n  &:focus {\n    background: rgba(0, 0, 0, 0.7);\n  }\n\n  ${(props) =>\n    props.loading &&\n    css`\n      cursor: not-allowed;\n      opacity: 0.7;\n      &:hover {\n        scale: 1;\n      }\n    `}\n`;\n\nexport default Button;\n","import Modal from \"react-modal\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n};\n\nconst NewModal = ({ children, ...rest }) => {\n  const { modalIsOpen, setIsOpen } = rest;\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default NewModal;\n","import { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useLogout } from \"../hooks/useLogout\";\nimport EditProfile from \"../pages/EditProfile\";\nimport { useState } from \"react\";\n\nconst NavBar = (props) => {\n  const user = useAuthContext().user;\n  const location = useLocation();\n  const logout = useLogout();\n\n  const onSignOutHandler = async () => {\n    await logout.mutateAsync();\n  };\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  return (\n    <NavWrapper>\n      <span>\n        <LinkStyle to=\"/all-posts\">All Posts</LinkStyle>\n        <LinkStyle to=\"/popular-posts\">Popular Posts</LinkStyle>\n        {user?.role === \"Admin\" && (\n          <LinkStyle to=\"/pending-posts\">Pending Posts</LinkStyle>\n        )}\n        {user && user?.role !== \"Admin\" && (\n          <LinkStyle to=\"/personal-posts\">Your Posts</LinkStyle>\n        )}\n        {user && user?.role !== \"Admin\" && (\n          <LinkStyle state={{ from: location.pathname }} to=\"/create-new-post\">\n            Create Post\n          </LinkStyle>\n        )}\n        <LinkStyle to=\"/users-list\">Users</LinkStyle>\n      </span>\n      <NavPart>\n        {user && (\n          <LinkStyle to=\"/signin\" onClick={onSignOutHandler}>\n            Logout\n          </LinkStyle>\n        )}\n        {user && (\n          <Button onClick={() => setIsOpen(true)}>\n            {`${user.firstName} ${user.lastName}`}\n          </Button>\n        )}\n        {!user && <LinkStyle to=\"/signup\">Sign up</LinkStyle>}\n        {!user && <LinkStyle to=\"/signin\">Sign in</LinkStyle>}\n      </NavPart>\n      <EditProfile\n        modalIsOpen={modalIsOpen}\n        setIsOpen={setIsOpen}\n        firstName={user?.firstName}\n        lastName={user?.lastName}\n        email={user?.email}\n        id={user?.id}\n        currentUser\n      />\n    </NavWrapper>\n  );\n};\n\nconst NavPart = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  border-radius: 10px;\n  color: #ffffff;\n  text-decoration: none;\n  padding: 10px 5px;\n  margin: 0px 20px;\n  font-size: 1.25rem;\n\n  &:hover {\n    color: #b392ee;\n    scale: 1.1;\n    // font-weight: bold;\n  }\n  &:focus {\n    /* text-decoration: underline; */\n    border: 2px solid black;\n    border-radius: 10px;\n    font-weight: bold;\n  }\n`;\n\nconst LinkStyle = styled(Link)`\n  color: #ffffff;\n  text-decoration: none;\n  padding: 10px 5px;\n  margin: 0px 20px;\n  font-size: 1.25rem;\n\n  &:hover {\n    color: #b392ee;\n    scale: 1.1;\n    // font-weight: bold;\n  }\n  &:focus {\n    /* text-decoration: underline; */\n    border: 2px solid black;\n    border-radius: 10px;\n    font-weight: bold;\n  }\n`;\n\nconst NavWrapper = styled.div`\n  background: #343a40;\n  padding: 2px 12px;\n  color: #ffffff;\n  width: 100%;\n  position: fixed;\n  z-index: 2;\n  height: 3.5rem;\n  box-shadow: 0 7px 12px 0 rgba(0, 0, 0, 0.2);\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default NavBar;\n","import { useMutation } from \"react-query\";\nimport { logoutUser } from \"../service/user.service\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogout = () => {\n  const authContext = useAuthContext();\n\n  return useMutation(logoutUser, {\n    onError: (err) => {\n    },\n    onSuccess: ({ data }) => {\n      authContext.logout();\n    },\n  });\n};\n","import styled from \"styled-components\";\n\nconst ValidationErrorField = styled.div`\n  color: red;\n  font-size: 0.8rem;\n  margin-top: ${(props) => props.marginTop || -10}px;\n`;\n\nconst ValidationError = (props) => {\n  return (\n    <ValidationErrorField marginTop={props.marginTop}>\n      {props.children}\n    </ValidationErrorField>\n  );\n};\n\nexport default ValidationError;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport NewModal from \"../components/Modal\";\nimport Button from \"../components/Button\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport ValidationError from \"../components/ValidationError\";\nimport { useUpdateUser } from \"../hooks/useUpdateUser\";\nimport { currentUser } from \"../service/user.service\";\n\nconst EditProfile = (props) => {\n  const context = useAuthContext();\n  const {\n    modalIsOpen,\n    setIsOpen,\n    firstName,\n    lastName,\n    email,\n    id,\n    currentUser: isCurrentUser,\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      firstName,\n      lastName,\n      email,\n      password: \"\",\n    },\n    mode: \"onChange\",\n  });\n\n  const { mutateAsync } = useUpdateUser();\n\n  const onSubmit = async (data) => {\n    if (id) {\n      await mutateAsync({\n        id: id,\n        ...data,\n        password: data.password ? data.password : undefined,\n      });\n      if (isCurrentUser) {\n        const { data: userData } = await currentUser();\n        context.login(userData);\n      }\n      setIsOpen(false);\n    }\n  };\n\n  return (\n    <NewModal modalIsOpen={modalIsOpen} setIsOpen={setIsOpen}>\n      <FormWrapper onSubmit={handleSubmit(onSubmit)}>\n        <Title>Edit Profile</Title>\n\n        <ItemWrapper>\n          <Label htmlFor=\"firstName\">First Name</Label>\n          <Input\n            id=\"firstName\"\n            {...register(\"firstName\", { required: \"First name is required\" })}\n          />\n          {errors.firstName && (\n            <ValidationError marginTop={1}>\n              {errors.firstName.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"lastName\">Last Name</Label>\n          <Input\n            id=\"lastName\"\n            {...register(\"lastName\", { required: \"Last name is required\" })}\n          />\n          {errors.lastName && (\n            <ValidationError marginTop={1}>\n              {errors.lastName.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            {...register(\"password\", {\n              validate: (value) => {\n                if (value === \"\") {\n                  return true;\n                }\n                if (value.length < 8) {\n                  return \"Password must be at least 8 characters long\";\n                }\n                return true;\n              },\n            })}\n          />\n          {errors.password && (\n            <ValidationError marginTop={1}>\n              {errors.password.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input type=\"email\" id=\"email\" disabled {...register(\"email\")} />\n          {/* Assuming email is set elsewhere since it's disabled */}\n        </ItemWrapper>\n\n        <ButtonWrapper type=\"submit\">Submit</ButtonWrapper>\n      </FormWrapper>\n    </NewModal>\n  );\n};\n\nconst Label = styled.label`\n  padding-left: 5px;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst ButtonWrapper = styled(Button)`\n  margin-top: 20px;\n`;\n\nconst FormWrapper = styled.form`\n  width: 50%;\n  height: auto;\n  margin: 0 auto;\n  background-color: #ffffff;\n  border-radius: 20px;\n  text-align: center;\n  padding: 60px 100px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.99);\n`;\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 3px;\n  margin-bottom: 25px;\n`;\n\nconst Input = styled.input`\n  border: 1px solid;\n  border-radius: 15px;\n  line-height: 1.15;\n  font-size: 1.1rem;\n  padding: 5px 15px;\n  border-color: 1px solid #c6d2d9;\n  font-family: inherit;\n\n  // width: 90%;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst NewWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  @media (max-width: 1100px) {\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nconst PostAdded = styled.div`\n  text-align: center;\n  color: ${(props) => props.color};\n  border: 2px solid;\n  font-size: 1.1rem;\n  border-radius: 10px;\n  margin: 5px;\n\n  padding: 5px;\n  width: fit-content;\n`;\n\n// const Button = styled.button`\n//   font-size: 1.1rem;\n//   border-radius: 10px;\n//   width: 140px;\n//   height: 35px;\n\n//   &:hover {\n//     background: rgba(0, 0, 0, 0.4);\n//     font-weight: bold;\n//   }\n// `;\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 2rem;\n  color: black;\n  margin-bottom: 20px;\n`;\n\nconst MainWrapper = styled.div`\n  overflow: scroll;\n\n  width: 75%;\n\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n\n  padding: 30px 40px 10px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.9);\n  border-radius: 10px;\n\n  background: #d9cece;\n\n  &::-webkit-scrollbar {\n    width: 0; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n\n  @media (max-width: 1100px) {\n    align-items: center !important;\n  }\n`;\n\nexport default EditProfile;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { updateUser } from \"../service/user.service\";\n\nexport const useUpdateUser = (props) => {\n  const queryClient = useQueryClient();\n  return useMutation(updateUser, {\n    onSuccess: ({ data }) => {\n      toast(\"Profile updated.\");\n      queryClient.invalidateQueries([\"all-users\"]);\n    },\n    ...props,\n  });\n};\n","import styled from \"styled-components\";\nimport Image from \"../images/user.png\";\nimport Button, { ButtonSpinner } from \"./Button\";\nimport { useRemoveUser } from \"../hooks/useRemoveUser\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useState } from \"react\";\nimport EditProfile from \"../pages/EditProfile\";\n\nconst Client = (props) => {\n  const user = useAuthContext().user;\n  const { mutateAsync, isLoading } = useRemoveUser();\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const onRemoveUser = async () => {\n    await mutateAsync(props.id);\n  };\n\n  const onEditUser = () => setIsOpen(true);\n\n  return (\n    <Wrapper>\n      <Title>\n        <img\n          src={Image}\n          style={{ width: \"50px\", borderRadius: \"50%\" }}\n          alt=\"Avatar\"\n        />\n        {props.name + \" \" + props.surname}\n      </Title>\n      <div>\n        Email: <strong>{props.email}</strong>\n      </div>\n      {user?.role === \"Admin\" && (\n        <ButtonWrapper>\n          <Button onClick={onRemoveUser}>\n            {isLoading ? <ButtonSpinner /> : \"Delete\"}\n          </Button>\n          <Button onClick={onEditUser}>Edit</Button>\n        </ButtonWrapper>\n      )}\n      <EditProfile\n        modalIsOpen={modalIsOpen}\n        setIsOpen={setIsOpen}\n        firstName={props?.name}\n        lastName={props?.surname}\n        email={props?.email}\n        id={props?.id}\n        currentUser\n      />\n    </Wrapper>\n  );\n};\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nconst Wrapper = styled.div`\n  width: 220px;\n  height: 200px;\n\n  background: rgb(139, 134, 221);\n  background: linear-gradient(\n    180deg,\n    rgba(139, 134, 221, 1) 0%,\n    rgba(206, 150, 241, 1) 35%\n  );\n\n  border-radius: 20px;\n\n  padding: 10px 40px;\n  margin: 20px 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.3rem;\n  color: rgba(0, 0, 0);\n\n  display: flex;\n  align-items: center;\n  gap: 2%;\n`;\n\nexport default Client;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { deleteUser } from \"../service/user.service\";\n\nexport const useRemoveUser = (props) => {\n  const queryClient = useQueryClient();\n\n  return useMutation(deleteUser, {\n    onSuccess: () => {\n      toast(\"User successfully removed.\");\n      queryClient.invalidateQueries([\"all-users\"]);\n      queryClient.invalidateQueries([\"pending-posts\"]);\n      queryClient.invalidateQueries([\"popular-posts\"]);\n      queryClient.invalidateQueries([\"all-posts\"]);\n      queryClient.invalidateQueries([\"user-posts\"]);\n    },\n    ...props,\n  });\n};\n","import NavBar from \"../components/NavBar\";\nimport styled from \"styled-components\";\nimport Client from \"../components/Client\";\nimport Spinner from \"../components/Spinner\";\nimport { useAllUsers } from \"../hooks/useAllUsers\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nconst ListAllClients = () => {\n  const { isAuthenticated: isAuth } = useAuth();\n  const { data: allUsers, isLoading: loadingAllUsers } = useAllUsers();\n  return (\n    <>\n      <NavBar />\n      {loadingAllUsers && <Spinner />}\n      <MainWrapper>\n        {!isAuth && <Title>Users with the most posts</Title>}\n        {allUsers?.map((client) => (\n          <Client\n            key={client.email}\n            name={client.firstName}\n            surname={client.lastName}\n            email={client.email}\n            id={client._id}\n          />\n        ))}\n      </MainWrapper>\n    </>\n  );\n};\n\nconst Title = styled.div`\n  color: rgba(0, 0, 0, 0.9);\n  position: absolute;\n  top: -5px;\n  font-style: italic;\n  width: fit-content;\n  margin: 10px auto;\n  font-weight: 400;\n  font-size: 1.3rem;\n`;\n\nconst MainWrapper = styled.div`\n  overflow: scroll;\n\n  min-width: 80vw;\n  min-height: 80vh;\n\n  margin: 6% 5%;\n  padding: 20px 14px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.9);\n  border-radius: 10px;\n\n  position: relative;\n\n  background: #d9cece;\n\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  &::-webkit-scrollbar {\n    width: 0; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n\n  @media (max-width: 700px) {\n    margin: 13% 5%;\n  }\n`;\n\nexport default ListAllClients;\n","import { useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router\";\nimport { getAllUsers } from \"../service/user.service\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useAllUsers = () => {\n  const navigate = useNavigate();\n  const authContext = useAuthContext();\n  return useQuery([\"all-users\", authContext?.user?.id], getAllUsers, {\n    onError: (err) => {\n      if (err.response?.status === 401) {\n        navigate(\"/signin\");\n      }\n    },\n  });\n};\n"],"names":["spin","keyframes","_templateObject","_taggedTemplateLiteral","ButtonSpinner","styled","div","_templateObject2","button","_templateObject3","props","borderRadius","loading","css","_templateObject4","customStyles","content","top","left","right","bottom","marginRight","transform","overlay","backgroundColor","_ref","children","rest","modalIsOpen","setIsOpen","_jsx","Modal","isOpen","onRequestClose","style","contentLabel","NavPart","Button","LinkStyle","Link","NavWrapper","user","useAuthContext","location","useLocation","logout","useLogout","authContext","useMutation","logoutUser","onError","err","onSuccess","data","useState","_jsxs","to","role","state","from","pathname","onClick","async","mutateAsync","concat","firstName","lastName","EditProfile","email","id","currentUser","ValidationErrorField","marginTop","Label","label","ButtonWrapper","FormWrapper","form","ItemWrapper","Input","input","_templateObject5","Title","_templateObject6","_templateObject7","color","_templateObject8","_templateObject9","context","isCurrentUser","register","handleSubmit","formState","errors","useForm","defaultValues","password","mode","queryClient","useQueryClient","updateUser","toast","invalidateQueries","useUpdateUser","NewModal","onSubmit","undefined","userData","login","htmlFor","required","ValidationError","message","type","validate","value","length","disabled","Wrapper","isLoading","deleteUser","useRemoveUser","src","Image","width","alt","name","surname","onEditUser","MainWrapper","ListAllClients","isAuthenticated","isAuth","useAuth","allUsers","loadingAllUsers","useAllUsers","_authContext$user","navigate","useNavigate","useQuery","getAllUsers","_err$response","response","status","_Fragment","NavBar","Spinner","map","client","Client","_id"],"sourceRoot":""}