{"version":3,"file":"static/js/138.1deefa6e.chunk.js","mappings":"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","sources":["hooks/useAllPosts.js","hooks/useUserPosts.js","hooks/usePendingPosts.js","pages/PendingPosts.js","hooks/useVerifyPost.js"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { getAllPosts } from \"../service/post.service\";\nimport { useNavigate } from \"react-router\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useAllPosts = (searchData) => {\n  const navigate = useNavigate();\n  const authContext = useAuthContext();\n  return useQuery(\n    [\"all-posts\", authContext?.user?.id, searchData],\n    () => getAllPosts(searchData),\n    {\n      onError: (err) => {\n        if (err.response?.status === 401) {\n          navigate(\"/signin\");\n        }\n      },\n      keepPreviousData: true,\n    }\n  );\n};\n","import { useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router\";\nimport { useAuthContext } from \"./useAuthContext\";\nimport { getUserPosts } from \"../service/user.service\";\n\nexport const useUserPost = (searchData) => {\n  const navigate = useNavigate();\n  const authContext = useAuthContext();\n  return useQuery(\n    [\"user-posts\", authContext.user.id, searchData],\n    () => getUserPosts(searchData),\n    {\n      onError: (err) => {\n        if (err?.response?.status === 401) {\n          navigate(\"/signin\");\n        }\n      },\n      keepPreviousData: true,\n    }\n  );\n};\n","import { useQuery } from \"react-query\";\nimport { getPendingPosts } from \"../service/post.service\";\nimport { useNavigate } from \"react-router\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const usePendingPosts = (searchData) => {\n  const navigate = useNavigate();\n  const authContext = useAuthContext();\n  return useQuery(\n    [\"pending-posts\", authContext?.user?.id, searchData],\n    () => getPendingPosts(searchData),\n    {\n      onError: (err) => {\n        if (err.response?.status === 401) {\n          navigate(\"/signin\");\n        }\n      },\n      keepPreviousData: true,\n    }\n  );\n};\n","import Post from \"../components/Post\";\nimport styled from \"styled-components\";\nimport NavBar from \"../components/NavBar\";\nimport React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport Image from \"../images/create.png\";\nimport { useNavigate } from \"react-router\";\nimport Spinner from \"../components/Spinner\";\nimport NumOfPosts from \"../components/NumOfPosts\";\nimport { useAllPosts } from \"../hooks/useAllPosts\";\nimport { useGetCities } from \"../hooks/useGetCities\";\nimport Select from \"react-select\";\nimport { useUserPost } from \"../hooks/useUserPosts\";\nimport { useVerifyPost } from \"../hooks/useVerifyPost\";\nimport ListPosts from \"../components/ListPosts\";\nimport { usePendingPosts } from \"../hooks/usePendingPosts\";\nimport { useDeletePost } from \"../hooks/useDeletePost\";\n\nconst customStyles = {\n  control: (provided) => ({\n    ...provided,\n    cursor: \"pointer\",\n    fontSize: \"1.125rem\",\n    padding: \"2px\",\n    margin: \"10px\",\n    background: \"#e8d9d8\",\n    opacity: 0.4,\n    border: \"1px solid white\",\n    borderRadius: \"3px\",\n    color: \"rgba(0, 0, 0, 0.6)\",\n    boxShadow: \"none\",\n    width: \"350px\",\n    \"&:hover\": {\n      border: \"1px solid white\",\n    },\n  }),\n  menu: (provided) => ({\n    ...provided,\n    margin: \"10px\",\n    borderRadius: \"3px\",\n  }),\n  // You can add more custom styles for other parts like menuList, option, etc.\n};\n\nconst ClientPosts = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const [citySearch, setCitySearch] = useState(\"\");\n  const { data: allPosts, isLoading } = useUserPost();\n  const { data: citiesOptions, isLoading: isLoadingCities } =\n    useGetCities(citySearch);\n\n  const { mutateAsync: verifyPost } = useVerifyPost();\n  const { mutateAsync: removePost } = useDeletePost();\n\n  const onSearchHandler = (event) => {\n    setSearch(event.target.value);\n  };\n  const onVerify = async (id) => {\n    await verifyPost(id);\n  };\n  const onRemove = async (id) => {\n    await removePost(id);\n  };\n\n  return (\n    <>\n      <NavBar />\n      <ListPosts\n        fetchPosts={usePendingPosts}\n        pendingPosts\n        onVerify={onVerify}\n        onRemove={onRemove}\n        placeholder={\"No pending posts.\"}\n      />\n    </>\n  );\n};\n\nconst FilterWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* z-index: 999; */\n\n  margin: 60px 1px 20px;\n  width: 80%;\n`;\n\nconst NoPosts = styled.div`\n  text-align: center;\n  color: black;\n  font-size: 1.2rem;\n  margin: 10px;\n`;\n\nconst SearchFilter = styled.div`\n  display: flex;\n`;\n\nconst Input = styled.input`\n  font-size: 1.125rem;\n  padding: 10px;\n  margin: 10px;\n  background: #e8d9d8;\n  opacity: 0.4;\n  border: 1px solid white;\n  border-radius: 3px;\n\n  ::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n`;\n\nconst MainWrapper = styled.div`\n  position: realtive;\n\n  overflow: scroll;\n\n  width: 80vw;\n  height: 90%;\n\n  margin: 0px 0px 5%;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.9);\n  border-radius: 10px;\n\n  background: #d9cece;\n\n  &::-webkit-scrollbar {\n    width: 0; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`;\n\nexport default ClientPosts;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { verifyPost } from \"../service/post.service\";\n\nexport const useVerifyPost = (props) => {\n  const queryClient = useQueryClient();\n\n  return useMutation(verifyPost, {\n    onSuccess: ({ data }) => {\n      toast(\"Post successfully verified.\");\n      queryClient.invalidateQueries([\"pending-posts\"]);\n      queryClient.invalidateQueries([\"popular-posts\"]);\n      queryClient.invalidateQueries([\"all-posts\"]);\n      queryClient.invalidateQueries([\"user-posts\"]);\n    },\n    ...props,\n  });\n};\n"],"names":["useAllPosts","searchData","_authContext$user","navigate","useNavigate","authContext","useAuthContext","useQuery","user","id","getAllPosts","onError","err","_err$response","response","status","keepPreviousData","useUserPost","getUserPosts","usePendingPosts","getPendingPosts","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","input","_templateObject4","_templateObject5","props","search","setSearch","useState","citySearch","setCitySearch","data","allPosts","isLoading","citiesOptions","isLoadingCities","useGetCities","mutateAsync","verifyPost","queryClient","useQueryClient","useMutation","onSuccess","_ref","toast","invalidateQueries","useVerifyPost","removePost","useDeletePost","_jsxs","_Fragment","children","_jsx","NavBar","ListPosts","fetchPosts","pendingPosts","onVerify","async","onRemove","placeholder"],"sourceRoot":""}