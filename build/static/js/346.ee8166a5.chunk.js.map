{"version":3,"file":"static/js/346.ee8166a5.chunk.js","mappings":"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","sources":["components/Button.js","components/Errors.js","components/Modal.js","components/NavBar.js","hooks/useLogout.js","components/ValidationError.js","service/city.service.js","hooks/useGetCities.js","pages/CreateNewPost.js","hooks/useCreatePost.js","pages/EditProfile.js","hooks/useUpdateUser.js","service/post.service.js"],"sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\n\n// Spinner Animation\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\n// Styled Spinner\nexport const ButtonSpinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-top: 4px solid black;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  animation: ${spin} 1s linear infinite;\n  margin: 0 auto;\n`;\nconst Button = styled.button`\n  border: 1px solid;\n  border-radius: ${(props) =>\n    props.borderRadius ? props.borderRadius : \"15px\"};\n  font-size: 1.1rem;\n  padding: 5px 15px;\n  cursor: pointer;\n  &:hover {\n    scale: 1.05;\n  }\n  &:focus {\n    background: rgba(0, 0, 0, 0.7);\n  }\n\n  ${(props) =>\n    props.loading &&\n    css`\n      cursor: not-allowed;\n      opacity: 0.7;\n      &:hover {\n        scale: 1;\n      }\n    `}\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst Errors = (props) => {\n  return <ErrorsField>{props.children}</ErrorsField>;\n};\n\nconst ErrorsField = styled.div`\n  color: red;\n  border: 1px solid;\n  border-radius: 10px;\n  margin: 10px;\n  padding: 5px;\n  font-size: 0.9rem;\n`;\n\nexport default Errors;\n","import Modal from \"react-modal\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  overlay: {\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n};\n\nconst NewModal = ({ children, ...rest }) => {\n  const { modalIsOpen, setIsOpen } = rest;\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      contentLabel=\"Example Modal\"\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default NewModal;\n","import { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useLogout } from \"../hooks/useLogout\";\nimport EditProfile from \"../pages/EditProfile\";\nimport { useState } from \"react\";\n\nconst NavBar = (props) => {\n  const user = useAuthContext().user;\n  const location = useLocation();\n  const logout = useLogout();\n\n  const onSignOutHandler = async () => {\n    await logout.mutateAsync();\n  };\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  return (\n    <NavWrapper>\n      <span>\n        <LinkStyle to=\"/all-posts\">All Posts</LinkStyle>\n        <LinkStyle to=\"/popular-posts\">Popular Posts</LinkStyle>\n        {user?.role === \"Admin\" && (\n          <LinkStyle to=\"/pending-posts\">Pending Posts</LinkStyle>\n        )}\n        {user && user?.role !== \"Admin\" && (\n          <LinkStyle to=\"/personal-posts\">Your Posts</LinkStyle>\n        )}\n        {user && user?.role !== \"Admin\" && (\n          <LinkStyle state={{ from: location.pathname }} to=\"/create-new-post\">\n            Create Post\n          </LinkStyle>\n        )}\n        <LinkStyle to=\"/users-list\">Users</LinkStyle>\n      </span>\n      <NavPart>\n        {user && (\n          <LinkStyle to=\"/signin\" onClick={onSignOutHandler}>\n            Logout\n          </LinkStyle>\n        )}\n        {user && (\n          <Button onClick={() => setIsOpen(true)}>\n            {`${user.firstName} ${user.lastName}`}\n          </Button>\n        )}\n        {!user && <LinkStyle to=\"/signup\">Sign up</LinkStyle>}\n        {!user && <LinkStyle to=\"/signin\">Sign in</LinkStyle>}\n      </NavPart>\n      <EditProfile\n        modalIsOpen={modalIsOpen}\n        setIsOpen={setIsOpen}\n        firstName={user?.firstName}\n        lastName={user?.lastName}\n        email={user?.email}\n        id={user?.id}\n        currentUser\n      />\n    </NavWrapper>\n  );\n};\n\nconst NavPart = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  border-radius: 10px;\n  color: #ffffff;\n  text-decoration: none;\n  padding: 10px 5px;\n  margin: 0px 20px;\n  font-size: 1.25rem;\n\n  &:hover {\n    color: #b392ee;\n    scale: 1.1;\n    // font-weight: bold;\n  }\n  &:focus {\n    /* text-decoration: underline; */\n    border: 2px solid black;\n    border-radius: 10px;\n    font-weight: bold;\n  }\n`;\n\nconst LinkStyle = styled(Link)`\n  color: #ffffff;\n  text-decoration: none;\n  padding: 10px 5px;\n  margin: 0px 20px;\n  font-size: 1.25rem;\n\n  &:hover {\n    color: #b392ee;\n    scale: 1.1;\n    // font-weight: bold;\n  }\n  &:focus {\n    /* text-decoration: underline; */\n    border: 2px solid black;\n    border-radius: 10px;\n    font-weight: bold;\n  }\n`;\n\nconst NavWrapper = styled.div`\n  background: #343a40;\n  padding: 2px 12px;\n  color: #ffffff;\n  width: 100%;\n  position: fixed;\n  z-index: 2;\n  height: 3.5rem;\n  box-shadow: 0 7px 12px 0 rgba(0, 0, 0, 0.2);\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport default NavBar;\n","import { useMutation } from \"react-query\";\nimport { logoutUser } from \"../service/user.service\";\nimport { useAuthContext } from \"./useAuthContext\";\n\nexport const useLogout = () => {\n  const authContext = useAuthContext();\n\n  return useMutation(logoutUser, {\n    onError: (err) => {\n    },\n    onSuccess: ({ data }) => {\n      authContext.logout();\n    },\n  });\n};\n","import styled from \"styled-components\";\n\nconst ValidationErrorField = styled.div`\n  color: red;\n  font-size: 0.8rem;\n  margin-top: ${(props) => props.marginTop || -10}px;\n`;\n\nconst ValidationError = (props) => {\n  return (\n    <ValidationErrorField marginTop={props.marginTop}>\n      {props.children}\n    </ValidationErrorField>\n  );\n};\n\nexport default ValidationError;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.teleport.org/api/cities\",\n});\n\nexport const getCity = async (search) => {\n  const { data } = await api.get(`/?search=${search}`);\n  return data.count\n    ? data._embedded[\"city:search-results\"].map((item) => ({\n        value: item.matching_full_name,\n        label: item.matching_full_name,\n      }))\n    : [];\n};\n","import { useQuery } from \"react-query\";\nimport { useNavigate } from \"react-router\";\nimport { getCity } from \"../service/city.service\";\n\nexport const useGetCities = (search) => {\n  const navigate = useNavigate();\n  return useQuery([\"cities\", search], () => getCity(search), {\n    enabled: !!search,\n    onError: (err) => {\n      if (err.response?.status === 401) {\n        navigate(\"/signin\");\n      }\n    },\n  });\n};\n","import NavBar from \"../components/NavBar\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router\";\nimport { useContext, useState } from \"react\";\nimport { AuthContext as authContext } from \"../context/authContext\";\nimport { useGetCities } from \"../hooks/useGetCities\";\nimport Select from \"react-select\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useCreatePost } from \"../hooks/useCreatePost\";\nimport Errors from \"../components/Errors\";\nimport { ButtonSpinner } from \"../components/Button\";\n\nconst CreateNewPost = (props) => {\n  const { mutateAsync, isLoading } = useCreatePost();\n  const context = useContext(authContext);\n  const navigate = useNavigate();\n\n  const [citySearch, setCitySearch] = useState(\"\");\n  const { data: citiesOptions, isLoading: isLoadingCities } =\n    useGetCities(citySearch);\n\n  const onCloseHandler = () => {\n    navigate(\"/all-posts\");\n  };\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    await mutateAsync(data);\n    navigate(\"/all-posts\");\n  };\n\n  return (\n    <>\n      <NavBar />\n      <MainWrapper>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Title>\n            {context.user.firstName} {context.user.lastName}\n          </Title>\n          <Controller\n            name=\"city\"\n            control={control}\n            rules={{ required: \"City is required\" }}\n            render={({ field }) => (\n              <Select\n                // {...field}\n                cacheOptions\n                placeholder={\"Search by city...\"}\n                options={citiesOptions}\n                isLoading={isLoadingCities}\n                defaultOptions\n                isClearable\n                onInputChange={(newVal) => setCitySearch(newVal)}\n                onChange={(val) => {\n                  field.onChange(val?.value);\n                }}\n              />\n            )}\n          />\n          {errors.city && <Errors>{errors.city.message}</Errors>}\n\n          <Input\n            {...register(\"content\", { required: \"Content is required\" })}\n            placeholder=\"Enter content\"\n          />\n          {errors.content && <Errors>{errors.content.message}</Errors>}\n          <NewWrapper>\n            {/* {postAdded && <PostAdded color=\"#418a21\"> {postAdded}</PostAdded>}\n            {errorss &&\n              errorss.map((error) => (\n                <PostAdded color=\"#ed1a2f\">{error.message}</PostAdded>\n              ))}\n            {!postAdded && !errorss.length && <br />} */}\n            <ButtonWrapper>\n              <Button onClick={onCloseHandler}>Close</Button>\n              <Button type=\"submit\">\n                {isLoading ? <ButtonSpinner /> : \"Post\"}\n              </Button>\n            </ButtonWrapper>\n          </NewWrapper>\n        </form>\n      </MainWrapper>\n    </>\n  );\n};\n\nconst NewWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  @media (max-width: 1100px) {\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nconst PostAdded = styled.div`\n  text-align: center;\n  color: ${(props) => props.color};\n  border: 2px solid;\n  font-size: 1.1rem;\n  border-radius: 10px;\n  margin: 5px;\n\n  padding: 5px;\n  width: fit-content;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  margin-top: 15px;\n  @media (max-width: 500px) {\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n`;\n\nconst Button = styled.button`\n  cursor: pointer;\n  font-size: 1.1rem;\n  border-radius: 10px;\n  width: 140px;\n  height: 35px;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.4);\n    font-weight: bold;\n  }\n`;\n\nconst Input = styled.textarea`\n  // min-width: 800px;\n  // max-width: 100%;\n  min-height: 170px;\n  height: 100%;\n  width: 97%;\n\n  box-shadow: 0px 2px 16px hsl(260deg 10% 10% / 0.5);\n  border-radius: 10px;\n  border-color: transparent;\n\n  /* margin: 30px 0px; */\n  margin-top: 20px;\n\n  font-size: 1.125rem;\n\n  resize: none;\n\n  padding: 10px;\n\n  align-self: center;\n\n  @media (max-width: 750px) {\n    min-height: 100px;\n  }\n`;\n\nconst Title = styled.div`\n  font-weight: 800;\n  font-size: 1.4rem;\n  color: black;\n  margin-bottom: 10px;\n`;\n\nconst MainWrapper = styled.div`\n  overflow: scroll;\n\n  width: 50%;\n  height: 40%;\n\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  margin: 150px 20px 1000px;\n  //   margin: auto;\n  //   top: 0;\n  //   left: 0;\n  //   right: 0;\n  //   bottom: 100px;\n\n  padding: 30px 40px 10px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.9);\n  border-radius: 10px;\n\n  background: #d9cece;\n\n  &::-webkit-scrollbar {\n    width: 0; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n\n  @media (max-width: 1100px) {\n    align-items: center !important;\n  }\n`;\n\nexport default CreateNewPost;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { createPost } from \"../service/post.service\";\n\nexport const useCreatePost = (props) => {\n  const queryClient = useQueryClient();\n  return useMutation(createPost, {\n    onSuccess: ({ data }) => {\n      toast(\"Successfully created a new post.\");\n      queryClient.invalidateQueries([\"pending-posts\"]);\n      queryClient.invalidateQueries([\"all-posts\"]);\n      queryClient.invalidateQueries([\"user-posts\"]);\n    },\n    ...props,\n  });\n};\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport NewModal from \"../components/Modal\";\nimport Button from \"../components/Button\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport ValidationError from \"../components/ValidationError\";\nimport { useUpdateUser } from \"../hooks/useUpdateUser\";\nimport { currentUser } from \"../service/user.service\";\n\nconst EditProfile = (props) => {\n  const context = useAuthContext();\n  const {\n    modalIsOpen,\n    setIsOpen,\n    firstName,\n    lastName,\n    email,\n    id,\n    currentUser: isCurrentUser,\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      firstName,\n      lastName,\n      email,\n      password: \"\",\n    },\n    mode: \"onChange\",\n  });\n\n  const { mutateAsync } = useUpdateUser();\n\n  const onSubmit = async (data) => {\n    if (id) {\n      await mutateAsync({\n        id: id,\n        ...data,\n        password: data.password ? data.password : undefined,\n      });\n      if (isCurrentUser) {\n        const { data: userData } = await currentUser();\n        context.login(userData);\n      }\n      setIsOpen(false);\n    }\n  };\n\n  return (\n    <NewModal modalIsOpen={modalIsOpen} setIsOpen={setIsOpen}>\n      <FormWrapper onSubmit={handleSubmit(onSubmit)}>\n        <Title>Edit Profile</Title>\n\n        <ItemWrapper>\n          <Label htmlFor=\"firstName\">First Name</Label>\n          <Input\n            id=\"firstName\"\n            {...register(\"firstName\", { required: \"First name is required\" })}\n          />\n          {errors.firstName && (\n            <ValidationError marginTop={1}>\n              {errors.firstName.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"lastName\">Last Name</Label>\n          <Input\n            id=\"lastName\"\n            {...register(\"lastName\", { required: \"Last name is required\" })}\n          />\n          {errors.lastName && (\n            <ValidationError marginTop={1}>\n              {errors.lastName.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            {...register(\"password\", {\n              validate: (value) => {\n                if (value === \"\") {\n                  return true;\n                }\n                if (value.length < 8) {\n                  return \"Password must be at least 8 characters long\";\n                }\n                return true;\n              },\n            })}\n          />\n          {errors.password && (\n            <ValidationError marginTop={1}>\n              {errors.password.message}\n            </ValidationError>\n          )}\n        </ItemWrapper>\n\n        <ItemWrapper>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input type=\"email\" id=\"email\" disabled {...register(\"email\")} />\n          {/* Assuming email is set elsewhere since it's disabled */}\n        </ItemWrapper>\n\n        <ButtonWrapper type=\"submit\">Submit</ButtonWrapper>\n      </FormWrapper>\n    </NewModal>\n  );\n};\n\nconst Label = styled.label`\n  padding-left: 5px;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst ButtonWrapper = styled(Button)`\n  margin-top: 20px;\n`;\n\nconst FormWrapper = styled.form`\n  width: 50%;\n  height: auto;\n  margin: 0 auto;\n  background-color: #ffffff;\n  border-radius: 20px;\n  text-align: center;\n  padding: 60px 100px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.99);\n`;\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 3px;\n  margin-bottom: 25px;\n`;\n\nconst Input = styled.input`\n  border: 1px solid;\n  border-radius: 15px;\n  line-height: 1.15;\n  font-size: 1.1rem;\n  padding: 5px 15px;\n  border-color: 1px solid #c6d2d9;\n  font-family: inherit;\n\n  // width: 90%;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst NewWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  @media (max-width: 1100px) {\n    justify-content: center;\n    gap: 10px;\n  }\n`;\n\nconst PostAdded = styled.div`\n  text-align: center;\n  color: ${(props) => props.color};\n  border: 2px solid;\n  font-size: 1.1rem;\n  border-radius: 10px;\n  margin: 5px;\n\n  padding: 5px;\n  width: fit-content;\n`;\n\n// const Button = styled.button`\n//   font-size: 1.1rem;\n//   border-radius: 10px;\n//   width: 140px;\n//   height: 35px;\n\n//   &:hover {\n//     background: rgba(0, 0, 0, 0.4);\n//     font-weight: bold;\n//   }\n// `;\n\nconst Title = styled.div`\n  font-weight: 700;\n  font-size: 2rem;\n  color: black;\n  margin-bottom: 20px;\n`;\n\nconst MainWrapper = styled.div`\n  overflow: scroll;\n\n  width: 75%;\n\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n\n  padding: 30px 40px 10px;\n\n  box-shadow: 0px 2px 16px hsl(260deg 50% 10% / 0.9);\n  border-radius: 10px;\n\n  background: #d9cece;\n\n  &::-webkit-scrollbar {\n    width: 0; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n\n  @media (max-width: 1100px) {\n    align-items: center !important;\n  }\n`;\n\nexport default EditProfile;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { updateUser } from \"../service/user.service\";\n\nexport const useUpdateUser = (props) => {\n  const queryClient = useQueryClient();\n  return useMutation(updateUser, {\n    onSuccess: ({ data }) => {\n      toast(\"Profile updated.\");\n      queryClient.invalidateQueries([\"all-users\"]);\n    },\n    ...props,\n  });\n};\n","import { api } from \"../api/api.instance\";\nimport { getSearchQuery } from \"../utils/postSearchQuery\";\n\nexport const getAllPosts = async (searchData) => {\n  const query = getSearchQuery(searchData);\n  const { data } = await api.get(`/posts${query}`);\n  return data;\n};\n\nexport const getPost = async (id) => {\n  const { data } = await api.get(`/posts/${id}`);\n  return data;\n};\n\nexport const getPopularPost = async (searchData) => {\n  const query = getSearchQuery(searchData);\n  const { data } = await api.get(`/posts/popular${query}`);\n  return data;\n};\n\nexport const createPost = async (postData) => {\n  const { data } = await api.post(\"/posts/create\", postData);\n  return data;\n};\n\nexport const updatePost = async ({ id, ...postData }) => {\n  const { data } = await api.put(`/posts/${id}`, postData);\n  return data;\n};\n\nexport const likePost = async (id) => {\n  const { data } = await api.post(`/posts/${id}/like`);\n  return data;\n};\n\nexport const getPendingPosts = async (searchData) => {\n  const query = getSearchQuery(searchData);\n  const { data } = await api.get(\"/posts/pending\" + query);\n  return data;\n};\n\nexport const verifyPost = async (id) => {\n  const { data } = await api.post(`/posts/${id}/verify`);\n  return data;\n};\n\nexport const deletePost = async (id) => {\n  await api.delete(`/posts/${id}`);\n};\n"],"names":["spin","keyframes","_templateObject","_taggedTemplateLiteral","ButtonSpinner","styled","div","_templateObject2","button","_templateObject3","props","borderRadius","loading","css","_templateObject4","ErrorsField","_jsx","children","customStyles","content","top","left","right","bottom","marginRight","transform","overlay","backgroundColor","_ref","rest","modalIsOpen","setIsOpen","Modal","isOpen","onRequestClose","style","contentLabel","NavPart","Button","LinkStyle","Link","NavWrapper","user","useAuthContext","location","useLocation","logout","useLogout","authContext","useMutation","logoutUser","onError","err","onSuccess","data","useState","_jsxs","to","role","state","from","pathname","onClick","async","mutateAsync","concat","firstName","lastName","EditProfile","email","id","currentUser","ValidationErrorField","marginTop","api","axios","create","baseURL","useGetCities","search","navigate","useNavigate","useQuery","get","count","_embedded","map","item","value","matching_full_name","label","getCity","enabled","_err$response","response","status","NewWrapper","ButtonWrapper","color","Input","textarea","_templateObject5","Title","_templateObject6","MainWrapper","_templateObject7","isLoading","queryClient","useQueryClient","createPost","toast","invalidateQueries","useCreatePost","context","useContext","citySearch","setCitySearch","citiesOptions","isLoadingCities","control","register","handleSubmit","formState","errors","useForm","_Fragment","NavBar","onSubmit","Controller","name","rules","required","render","field","Select","cacheOptions","placeholder","options","defaultOptions","isClearable","onInputChange","newVal","onChange","val","city","Errors","message","onCloseHandler","type","Label","FormWrapper","form","ItemWrapper","input","_templateObject8","_templateObject9","isCurrentUser","defaultValues","password","mode","updateUser","useUpdateUser","NewModal","undefined","userData","login","htmlFor","ValidationError","validate","length","disabled","getAllPosts","query","getSearchQuery","searchData","getPost","getPopularPost","post","postData","updatePost","put","likePost","getPendingPosts","verifyPost","deletePost","delete"],"sourceRoot":""}